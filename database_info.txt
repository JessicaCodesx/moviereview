-- 2. Create the movies table
CREATE TABLE IF NOT EXISTS movies (
    id INT AUTO_INCREMENT PRIMARY KEY,
    imdb_id VARCHAR(20) UNIQUE,
    title VARCHAR(255),
    year VARCHAR(10),
    plot TEXT,
    poster VARCHAR(500),
    director VARCHAR(255),
    actors VARCHAR(500),
    genre VARCHAR(255),
    runtime VARCHAR(50),
    rating VARCHAR(10),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 3. Create the ratings table
CREATE TABLE IF NOT EXISTS ratings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    movie_id INT,
    rating INT CHECK (rating >= 1 AND rating <= 5),
    user_ip VARCHAR(45),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (movie_id) REFERENCES movies(id),
    UNIQUE KEY unique_user_movie (movie_id, user_ip)
);

-- 4. Create the AI reviews table
CREATE TABLE IF NOT EXISTS ai_reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    movie_id INT,
    review TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (movie_id) REFERENCES movies(id)
);

 Create indexes for better performance
CREATE INDEX idx_movies_imdb_id ON movies(imdb_id);
CREATE INDEX idx_ratings_movie_id ON ratings(movie_id);
CREATE INDEX idx_ratings_user_ip ON ratings(user_ip);
CREATE INDEX idx_reviews_movie_id ON ai_reviews(movie_id);

-- Verify tables were created successfully
SHOW TABLES;
DESCRIBE movies;
DESCRIBE ratings;
DESCRIBE ai_reviews;